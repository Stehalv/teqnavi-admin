generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}



model Page {
  id            String    @id @default(cuid())
  shopId        String
  title         String
  handle        String
  template      String    @default("page")
  sections      String    @db.Text @default("{}")  // Stores section data as JSON string
  section_order String    @db.Text @default("[]")  // Stores array of section IDs as JSON string
  settings      String    @db.Text @default("{}")  // Stores page settings as JSON string
  isPublished   Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  versions      PageVersion[]

  @@unique([shopId, handle])
  @@index([shopId])
  @@map("pages")
}

model PageVersion {
  id            String    @id @default(cuid())
  pageId        String
  version       Int
  sections      String    @db.Text @default("{}")
  section_order String    @db.Text @default("[]")
  settings      String    @db.Text @default("{}")
  message       String?
  createdAt     DateTime  @default(now())
  createdBy     String?
  isLatest      Boolean   @default(false)
  page          Page      @relation(fields: [pageId], references: [id], onDelete: Cascade)

  @@unique([pageId, version])
  @@index([pageId])
  @@map("page_versions")
}
